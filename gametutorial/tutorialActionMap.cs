//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/gametutorial/tutorialActionMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TutorialActionMap : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TutorialActionMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""tutorialActionMap"",
    ""maps"": [
        {
            ""name"": ""Ship"",
            ""id"": ""867a2885-2fa6-4afb-b4d3-08ffe6549055"",
            ""actions"": [
                {
                    ""name"": ""LaunchMissile"",
                    ""type"": ""Button"",
                    ""id"": ""e1c53d45-7415-4ccf-8fd3-9ffd985aa67f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement1"",
                    ""type"": ""Value"",
                    ""id"": ""3b1d1f99-8697-4eeb-b939-f77242689467"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseRightHold1"",
                    ""type"": ""Button"",
                    ""id"": ""13bc2486-19d9-4e84-bfb3-5e70f0996ab6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse1"",
                    ""type"": ""Value"",
                    ""id"": ""ee8cbb81-6260-47cd-9d00-e15cdf6c4510"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AirshipAltitude1"",
                    ""type"": ""Value"",
                    ""id"": ""43416588-f1d3-4db0-9e47-101a165e441b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Focus"",
                    ""type"": ""Button"",
                    ""id"": ""75ef4ee6-90c2-4e0b-8a54-0242d337e512"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CheckHealth"",
                    ""type"": ""Button"",
                    ""id"": ""ec2a022e-a790-403b-898e-c09bf1651a9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8cdde1b3-e210-4631-95ed-245094e78e9e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LaunchMissile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""256038b1-5fc3-416c-8569-164276e81e84"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f47ae58e-d461-4215-8c61-5049a9d71563"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dd49e0de-0229-4ba4-9f09-6791d4b2ff9d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""76a8e11f-318d-4b79-a059-70adbd1f55e2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d25aa589-0f2d-45cd-b961-ac5b61be375c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""52bf9515-62fd-4df5-ac29-b99de61563cf"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AirshipAltitude1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""891f660f-5313-4e87-adfd-26e3a52b8a70"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AirshipAltitude1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""39f364ef-4007-496c-b203-862626746ba0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AirshipAltitude1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a70d4c30-9a41-4412-b2f2-e3bd240b15f2"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Focus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e35ef52f-fef9-4ec3-8479-9b46c2dee462"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CheckHealth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""806f149b-3e78-47b7-b9f9-6e27d240e080"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6715ca0-0878-4fe1-b6eb-b599fcc4fc60"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseRightHold1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Ship
        m_Ship = asset.FindActionMap("Ship", throwIfNotFound: true);
        m_Ship_LaunchMissile = m_Ship.FindAction("LaunchMissile", throwIfNotFound: true);
        m_Ship_Movement1 = m_Ship.FindAction("Movement1", throwIfNotFound: true);
        m_Ship_MouseRightHold1 = m_Ship.FindAction("MouseRightHold1", throwIfNotFound: true);
        m_Ship_Mouse1 = m_Ship.FindAction("Mouse1", throwIfNotFound: true);
        m_Ship_AirshipAltitude1 = m_Ship.FindAction("AirshipAltitude1", throwIfNotFound: true);
        m_Ship_Focus = m_Ship.FindAction("Focus", throwIfNotFound: true);
        m_Ship_CheckHealth = m_Ship.FindAction("CheckHealth", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ship
    private readonly InputActionMap m_Ship;
    private IShipActions m_ShipActionsCallbackInterface;
    private readonly InputAction m_Ship_LaunchMissile;
    private readonly InputAction m_Ship_Movement1;
    private readonly InputAction m_Ship_MouseRightHold1;
    private readonly InputAction m_Ship_Mouse1;
    private readonly InputAction m_Ship_AirshipAltitude1;
    private readonly InputAction m_Ship_Focus;
    private readonly InputAction m_Ship_CheckHealth;
    public struct ShipActions
    {
        private @TutorialActionMap m_Wrapper;
        public ShipActions(@TutorialActionMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @LaunchMissile => m_Wrapper.m_Ship_LaunchMissile;
        public InputAction @Movement1 => m_Wrapper.m_Ship_Movement1;
        public InputAction @MouseRightHold1 => m_Wrapper.m_Ship_MouseRightHold1;
        public InputAction @Mouse1 => m_Wrapper.m_Ship_Mouse1;
        public InputAction @AirshipAltitude1 => m_Wrapper.m_Ship_AirshipAltitude1;
        public InputAction @Focus => m_Wrapper.m_Ship_Focus;
        public InputAction @CheckHealth => m_Wrapper.m_Ship_CheckHealth;
        public InputActionMap Get() { return m_Wrapper.m_Ship; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShipActions set) { return set.Get(); }
        public void SetCallbacks(IShipActions instance)
        {
            if (m_Wrapper.m_ShipActionsCallbackInterface != null)
            {
                @LaunchMissile.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnLaunchMissile;
                @LaunchMissile.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnLaunchMissile;
                @LaunchMissile.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnLaunchMissile;
                @Movement1.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnMovement1;
                @Movement1.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnMovement1;
                @Movement1.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnMovement1;
                @MouseRightHold1.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouseRightHold1;
                @MouseRightHold1.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouseRightHold1;
                @MouseRightHold1.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouseRightHold1;
                @Mouse1.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouse1;
                @Mouse1.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouse1;
                @Mouse1.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouse1;
                @AirshipAltitude1.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnAirshipAltitude1;
                @AirshipAltitude1.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnAirshipAltitude1;
                @AirshipAltitude1.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnAirshipAltitude1;
                @Focus.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnFocus;
                @Focus.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnFocus;
                @Focus.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnFocus;
                @CheckHealth.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnCheckHealth;
                @CheckHealth.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnCheckHealth;
                @CheckHealth.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnCheckHealth;
            }
            m_Wrapper.m_ShipActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LaunchMissile.started += instance.OnLaunchMissile;
                @LaunchMissile.performed += instance.OnLaunchMissile;
                @LaunchMissile.canceled += instance.OnLaunchMissile;
                @Movement1.started += instance.OnMovement1;
                @Movement1.performed += instance.OnMovement1;
                @Movement1.canceled += instance.OnMovement1;
                @MouseRightHold1.started += instance.OnMouseRightHold1;
                @MouseRightHold1.performed += instance.OnMouseRightHold1;
                @MouseRightHold1.canceled += instance.OnMouseRightHold1;
                @Mouse1.started += instance.OnMouse1;
                @Mouse1.performed += instance.OnMouse1;
                @Mouse1.canceled += instance.OnMouse1;
                @AirshipAltitude1.started += instance.OnAirshipAltitude1;
                @AirshipAltitude1.performed += instance.OnAirshipAltitude1;
                @AirshipAltitude1.canceled += instance.OnAirshipAltitude1;
                @Focus.started += instance.OnFocus;
                @Focus.performed += instance.OnFocus;
                @Focus.canceled += instance.OnFocus;
                @CheckHealth.started += instance.OnCheckHealth;
                @CheckHealth.performed += instance.OnCheckHealth;
                @CheckHealth.canceled += instance.OnCheckHealth;
            }
        }
    }
    public ShipActions @Ship => new ShipActions(this);
    public interface IShipActions
    {
        void OnLaunchMissile(InputAction.CallbackContext context);
        void OnMovement1(InputAction.CallbackContext context);
        void OnMouseRightHold1(InputAction.CallbackContext context);
        void OnMouse1(InputAction.CallbackContext context);
        void OnAirshipAltitude1(InputAction.CallbackContext context);
        void OnFocus(InputAction.CallbackContext context);
        void OnCheckHealth(InputAction.CallbackContext context);
    }
}
